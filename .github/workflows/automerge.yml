name: "Dependabot Automerge"
on: 
  schedule:
    - cron: '40 13 * * *'
  workflow_dispatch:
    inputs:
      combineBranchName:
          description: 'Name of the branch to merge'
          required: true
          default: 'combine-prs-branch'

jobs:
  automerge-prs:
    runs-on: ubuntu-latest
    steps:
    # get the names of the pull requests to merge
      - uses: actions/github-script@v3
        name: Auto Merge Dependabot Pull Requests
        with:
          github-token: ${{secrets.DEPENDABOT_TOKEN}}
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const pulls = await github.paginate('GET /repos/:owner/:repo/pulls', {
              owner,
              repo
            });

            for (const pull of pulls) {
              const branchName = pull['head']['ref'] 
              const pull_number = pull['number']
              const validBranch = branchName.startsWith('dependabot') || (branchName == '${{ github.event.inputs.combineBranchName }}')
              if (validBranch) {
                if (branchName.startsWith('dependabot')) {
                  await github.request('POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews', {
                  owner,
                  repo,
                  pull_number,
                  event: 'APPROVE'
                });      
              }           
              await github.request('PUT /repos/{owner}/{repo}/pulls/{pull_number}/merge', {
                  owner,
                  repo,
                  pull_number,
                });
              }
            }
            return branchName

      # send message to slack respected channel to notify a dependabot PR has auto merged. 
      - uses: 8398a7/action-slack@v3
        with:
          status: custom
          fields: repo,workflow,job,author,took
          custom_payload: |
            {
              attachments: [{
                color: '${{ job.status }}' === 'success' ? 'good' : '${{ job.status }}' === 'failure' ? 'danger' : 'warning',
                text: `${process.env.AS_REPO}\n${process.env.AS_WORKFLOW} by ${process.env.AS_AUTHOR}\n${{ job.status }} in ${process.env.AS_TOOK}`,
              }]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
        if: always() 
